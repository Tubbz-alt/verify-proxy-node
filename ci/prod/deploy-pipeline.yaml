---
apiVersion: concourse.govsvc.uk/v1beta1
kind: Pipeline
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: deploy
spec:
  exposed: true
  config:

    github_source: &github_source
      uri: https://github.com/alphagov/verify-proxy-node.git
      organization: alphagov
      owner: alphagov
      repository: verify-proxy-node
      github_api_token: ((github.api-token))
      access_token: ((github.api-token))
      approvers: ((trusted-developers.github-accounts))
      required_approval_count: 2

    task_toolbox: &task_toolbox
      type: docker-image
      source:
        repository: ((concourse.task-toolbox-image))
        tag: ((concourse.task-toolbox-tag))

    resource_types:

    - name: github
      type: registry-image
      source:
        repository: ((concourse.github-resource-image))
        tag: ((concourse.github-resource-tag))

    resources:

    - name: release
      type: github-release
      icon: tag
      source:
        <<: *github_source
        tag_filter: ^v1\.\d+$

    - name: nightly
      type: time
      icon: update
      source:
        interval: 1h
        start: 3:00 AM
        stop: 4:00 AM

    jobs:

    - name: deploy-nl-production
      serial: true
      plan:

      - get: release
        trigger: true

      - get: nightly
        trigger: true

      - task: render-manifests
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: release
          outputs:
          - name: manifests
          params:
            CLUSTER_NAME: ((cluster.name))
            CLUSTER_DOMAIN: ((cluster.domain))
            CLUSTER_PUBLIC_KEY: ((artefact-signing-key.publicKey))
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            RELEASE_NAME: nl
            HUB_FQDN: www.signin.service.gov.uk
            ERROR_PAGE_URL: https://www.signin.service.gov.uk/proxy-node-error
            CONNECTOR_NODE_NATIONALITY_CODE: NL
            CONNECTOR_ENTITY_ID: https://eidas.minez.nl/EidasNodeC/ConnectorMetadata
            CONNECTOR_METADATA_FQDN: eidas.minez.nl
            CONNECTOR_METADATA_PATH: /EidasNodeC/ConnectorMetadata
            CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64: 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
            CLOUDHSM_IP: ((cluster.cloudHsmIp))
          run:
            path: /bin/bash
            args:
            - -euc
            - |
              echo "preparing keyring..."
              echo "${CLUSTER_PUBLIC_KEY}" > key
              gpg --import key
              gpg --export > ~/.gnupg/pubring.gpg
              echo "verifying package"
              helm verify ./release/*.tgz
              echo "rendering chart with release name '${RELEASE_NAME}' and namespace '${RELEASE_NAMESPACE}'..."
              helm template \
                --name "${RELEASE_NAME}" \
                --namespace "${RELEASE_NAMESPACE}" \
                --set "global.cluster.name=${CLUSTER_NAME}" \
                --set "global.cluster.domain=${CLUSTER_DOMAIN}" \
                --set "global.cloudHsm.ip=${CLOUDHSM_IP}" \
                --set "hubFqdn=${HUB_FQDN}" \
                --set "gateway.errorPageURL=${ERROR_PAGE_URL}" \
                --set "connector.entityID=${CONNECTOR_ENTITY_ID}" \
                --set "connector.metadata.fqdn=${CONNECTOR_METADATA_FQDN}" \
                --set "connector.metadata.path=${CONNECTOR_METADATA_PATH}" \
                --set "connector.metadataSigningTruststoreBase64=${CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64}" \
                --set "translator.connectorNodeNationalityCode=${CONNECTOR_NODE_NATIONALITY_CODE}" \
                --output-dir "./manifests/" \
                ./release/*.tgz

      - task: deploy-manifests
        timeout: 10m
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: manifests
          params:
            KUBERNETES_SERVICE_ACCOUNT: ((namespace-deployer))
            KUBERNETES_TOKEN: ((namespace-deployer.token))
            KUBERNETES_API: kubernetes.default.svc
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            RELEASE_NAME: nl
            APP_NAME: proxy-node
          run:
            path: /bin/bash
            args:
            - -euc
            - |
              echo "configuring kubectl"
              echo "${KUBERNETES_SERVICE_ACCOUNT}" | jq -r .["ca.crt"] > ca.crt
              kubectl config set-cluster self --server=https://kubernetes.default --certificate-authority=ca.crt
              kubectl config set-credentials deployer --token "${KUBERNETES_TOKEN}"
              kubectl config set-context deployer --user deployer --cluster self
              kubectl config use-context deployer

              echo "applying chart to ${RELEASE_NAMESPACE} namespace..."
              kapp deploy \
                -y \
                --namespace "${RELEASE_NAMESPACE}" \
                --allow-ns "${RELEASE_NAMESPACE}" \
                --app "${RELEASE_NAME}-${APP_NAME}" \
                --diff-changes \
                -f ./manifests/

    - name: delete-prod-deployments
      serial: true
      plan:
        - task: delete-deployments
          timeout: 10m
          config:
            platform: linux
            image_resource: *task_toolbox
            params:
              KUBERNETES_SERVICE_ACCOUNT: ((namespace-deployer))
              KUBERNETES_TOKEN: ((namespace-deployer.token))
              KUBERNETES_API: kubernetes.default.svc
              RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            run:
              path: /bin/bash
              args:
                - -euc
                - |
                  echo "configuring kubectl"
                  echo "${KUBERNETES_SERVICE_ACCOUNT}" | jq -r .["ca.crt"] > ca.crt
                  kubectl config set-cluster self --server=https://kubernetes.default --certificate-authority=ca.crt
                  kubectl config set-credentials deployer --token "${KUBERNETES_TOKEN}"
                  kubectl config set-context deployer --user deployer --cluster self
                  kubectl config use-context deployer

                  kapp delete -y --namespace "${RELEASE_NAMESPACE}" --app "cz-proxy-node"
                  kapp delete -y --namespace "${RELEASE_NAMESPACE}" --app "it-proxy-node"
                  kapp delete -y --namespace "${RELEASE_NAMESPACE}" --app "mt-proxy-node"
                  kapp delete -y --namespace "${RELEASE_NAMESPACE}" --app "se-proxy-node"
